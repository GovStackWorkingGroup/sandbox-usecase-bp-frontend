version: 2.1
orbs:
  aws-cli: circleci/aws-cli@3.1.4
  helm: circleci/helm@1.0
  kubernetes: circleci/kubernetes@1.3.1
jobs:
  deploy-frontend:
    docker:
      - image: cimg/aws:2023.03
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - aws-cli/setup:
          role-arn: 'arn:aws:iam::463471358064:role/CICDPipeline_sandbox-usecase-bp-frontend_Role_dev'
          aws-region: AWS_DEFAULT_REGION
          profile-name: CICDPipeline_sandbox-usecase-bp-frontend_Role_dev
          role-session-name: CircleSession
          session-duration: '1800'
      - helm/install-helm-client:
          version: v3.2.0
      - run:
          name: Create and push frontend container
          command: |
              docker build -t app/bp/dev-frontend:latest .
              aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin 463471358064.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com
              docker tag app/bp/dev-frontend:latest 463471358064.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/app/bp/dev-frontend:latest
              docker push 463471358064.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/app/bp/dev-frontend:latest
      - run:
          name: Update kubeconfig
          command: |
            aws eks update-kubeconfig --name "${AWS_CLUSTER_NAME}"
      - run:
          name: Install chart
          command: |
            helm upgrade \
              bp-frontend ./helm --install --create-namespace --namespace ${NAMESPACE}
      - run:
          name: Validate deployments
          command: |
            echo "Validate deployment"
            kubectl rollout status --watch --timeout=60s deployment/bp-frontend -n ${NAMESPACE} 

parameters:
  deploy_allowed:
    type: boolean
    default: false

workflows:
  Frontend Deployment:
    when: << pipeline.parameters.deploy_allowed >>
    jobs:
      - hold:
          type: approval
      - deploy-frontend:
          context: aws
          requires:
            - hold
